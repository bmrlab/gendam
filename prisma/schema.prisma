// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "cargo prisma"
  output   = "../crates/prisma/src/prisma.rs"
}

datasource db {
  provider = "sqlite"
  url      = "file:dev.db?socket_timeout=1&connection_limit=10"
  // for sqlite params, see https://prisma.github.io/quaint/quaint/connector/struct.SqliteParams.html
  // url      = env("LOCAL_DB_URL")
}

model FilePath {
  id    Int     @id @default(autoincrement())
  isDir Boolean

  materializedPath String
  name             String
  description      String?

  assetObjectId Int?
  assetObject   AssetObject? @relation(fields: [assetObjectId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([materializedPath, name])
  @@index([materializedPath])
}

model AssetObject {
  id Int @id @default(autoincrement())

  hash     String  @unique
  size     Int // file size in bytes
  mimeType String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  mediaData MediaData?

  filePaths     FilePath[]
  tasks         FileHandlerTask[]
  dataLocations DataLocation[]
}

model MediaData {
  id Int @id @default(autoincrement())

  width    Int?
  height   Int?
  duration Int?
  bitRate  Int?
  hasAudio Boolean?

  assetObjectId Int          @unique
  assetObject   AssetObject? @relation(fields: [assetObjectId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FileHandlerTask {
  id Int @id @default(autoincrement())

  assetObjectId Int
  assetObject   AssetObject? @relation(fields: [assetObjectId], references: [id], onDelete: Cascade)

  taskType String

  exitCode    Int?
  exitMessage String?

  startsAt  DateTime?
  endsAt    DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([assetObjectId, taskType])
}

model DataLocation {
  id Int @id @default(autoincrement())

  // fs, s3, etc
  // https://github.com/prisma/prisma/issues/2219
  medium String

  // JSON string
  // https://github.com/prisma/prisma/issues/3786
  config String @default("{}")

  assetObjectId Int
  assetObject   AssetObject @relation(fields: [assetObjectId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([assetObjectId, medium])
}
